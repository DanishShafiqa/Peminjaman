// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id Int @id @default(autoincrement())
  username String @default("")
  password String @default("")
  role userRole
  loan loan[]
  return returnn[]
}

model inventory {
  id       Int    @id @default(autoincrement())
  name     String @default("")
  category String @default("")
  location String @default("")
  quantity Int    @default(0)
  loan loan[]
  return returnn[]
}

model loan {
  borrow_id Int @id @default(autoincrement())
  user_id Int @default(0)
  item_id Int @default(0)
  borrow_date DateTime @default(now())
  return_date DateTime @default(now())
  user_detail user @relation(fields: [user_id], references: [id])
  item_detail inventory @relation(fields: [item_id], references: [id])
  return returnn[]
}

model returnn{
  return_id Int @id @default(autoincrement())
  borrow_id Int @default(0)
  user_id Int @default(0)
  item_id Int @default(0)
  actual_return_date DateTime @default(now())
  borrow_detail loan @relation(fields: [borrow_id], references: [borrow_id])
  user_detail user @relation(fields: [user_id], references: [id])
  item_detail inventory @relation(fields: [item_id], references: [id])
}

enum userRole {
  Admin
  User
}